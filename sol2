build:notify-failure:
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  stage: notify
  when: on_failure
  allow_failure: true
  script:
    # Step 1: Save commit ID
    - echo $CI_COMMIT_SHORT_SHA > commit_id

    # Step 2: Print tracking ID
    - echo "TRACKING_ID = $TRACKING_ID"

    # Step 3: Install jq if not already present (for Debian-based images)
    - apt-get update && apt-get install -y jq

    # Step 4: Get JWT Token from Apigee
    - |
      echo "Getting JWT Token..."
      JWT_TOKEN=$(curl --silent --location --request POST "$APIGEE_JWT_TOKEN_URL" \
        --header "Content-Type: application/json" \
        --data "$JWT_TOKEN_PAYLOAD" | jq -r '.access_token')
      echo "JWT Token fetched."

    # Step 5: Fetch failed jobs from GitLab API
    - |
      echo "Fetching failed jobs from GitLab..."
      curl --silent --location --request GET "https://gitlab.onefiserv.net/api/v4/projects/$CI_PROJECT_ID/pipelines/$CI_PIPELINE_ID/jobs?scope[]=failed" \
        --header "PRIVATE-TOKEN:$GITLAB_TOKEN" > data.json

    # Step 6: Debug - print data.json
    - echo "=== data.json ==="
    - cat data.json

    # Step 7: Extract failed job ID using jq
    - JOB_ID=$(jq '.[0].id' data.json)
    - echo "First failed job ID: $JOB_ID"

    # Optional Step 8: Fetch logs from failed job
    - echo "Fetching logs of failed job ID: $JOB_ID"
    - curl --silent --location --request GET "https://gitlab.onefiserv.net/api/v4/projects/$CI_PROJECT_ID/jobs/$JOB_ID/trace" \
        --header "PRIVATE-TOKEN:$GITLAB_TOKEN" > logs.txt

    # Optional Step 9: Print sample logs
    - echo "=== logs.txt (first 50 lines) ==="
    - head -n 50 logs.txt

  variables:
    GIT_STRATEGY: fetch
  rules:
    - when: on_failure