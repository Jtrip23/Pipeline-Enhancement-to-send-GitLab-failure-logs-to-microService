variables:
  MAVEN_CLI_OPTS: ""
  MAVEN_CLI_OPTS_OLD: "-s .m2/cicd-settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  TRACKING_ID: $TRACKING_ID
  PIPELINE_TYPE: "proxy-sync"
  pipelineType: "gitlab"

include: 
  - ci/global.variable.yml

default :
  tags:
    - apihub-shell-prod
  cache:
    paths:
      - edge

.update_scm__repo_template: &update_scm_repo_definition
  script:
    - echo "SaaS Proxy Sync Operation"
    - git config --global user.name "$user_name"
    - git config --global user.email "$user_email"
    - git clone https://$user_name:$private_token@$server_url/$gitlab_group/$repo_name.git -b $target_branch
    - cd $repo_name/
    - rm -rf *
    - git branch
    - git add .
    - git status 
    - git commit -m "removed the old bundle"
    - |
      curl $blob_url --output apiproxy.zip
      unzip -o apiproxy.zip
      rm -rf apiproxy.zip
    - |
      git add .  && \
      git status  && \
      git commit -m "$commit_message"  && \
      git push -u origin $target_branch

stages:
  - scm-update
  - notify

build:scm-update :
  <<: *update_scm_repo_definition
  stage: scm-update

notify_success:
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  stage: notify
  allow_failure: true
  script:
   - |
      echo $CI_JOB_STAGE
      echo $CI_COMMIT_SHORT_SHA > commit_id
      cat commit_id
      echo $FAILED_STAGE
      echo $TRACKING_ID
      echo $PIPELINE_TYPE
      # Retrieve JWT token
      JWT_TOKEN=$(curl --location --request POST "$APIGEE_JWT_TOKEN_URL" \
                  --header 'Content-Type: application/x-www-form-urlencoded' \
                  --header 'Authorization: Basic TWg5VktuaVc5cktWa0JSWllvYW1HWjlrNWhHQ25yQ3E6cE5WalBkQmduNzZ2MUkwQTloQkZSQkd0aTRpaHhrMWpPc0FvOU1MWmdPUg==' \
                  --data-urlencode 'alg=RS256' \
                  --data-urlencode 'clientId=Mh9VKniW9rKVkBRZYoamGZ9k5hGCnrCq' | grep -o '"access_token":"[^"]*' | sed 's/"access_token":"//' | tr -d '"')
      #echo $JWT_TOKEN
      echo "curl --location --request PUT $APIGEE_MS_URL/${PIPELINE_TYPE}/update-status"
      curl --location --request PUT "$APIGEE_MS_URL/$PIPELINE_TYPE/update-status" --header 'Content-Type: application/json' --header "Authorization: Bearer ${JWT_TOKEN}" --data "{\"trackingId\":\"${TRACKING_ID}\",\"commitId\":\"${CI_COMMIT_SHORT_SHA}\",\"scmOnboardStatus\":\"success\",\"pipelineStatus\":\"started\",\"pipelineFailedStage\":\"NA\",\"pipelineId\":\"${CI_PIPELINE_ID}\",\"pipelineErrorDetails\":\"NA\", \"pipelineType\":\"${pipelineType}\",\"projectId\":\"${CI_PROJECT_ID}\",\"refBranch\":\"${CI_COMMIT_REF_NAME}\"}" -vvv
notify_fail:
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  stage: notify
  allow_failure: true
  when: on_failure
  script:
   - |
      echo $CI_JOB_STAGE
      echo $CI_COMMIT_SHORT_SHA > commit_id
      cat commit_id
      echo "printing tracking"
      echo $PIPELINE_TYPE
      # Retrieve JWT token
      JWT_TOKEN=$(curl --location --request POST "$APIGEE_JWT_TOKEN_URL" \
                  --header 'Content-Type: application/x-www-form-urlencoded' \
                  --header 'Authorization: Basic TWg5VktuaVc5cktWa0JSWllvYW1HWjlrNWhHQ25yQ3E6cE5WalBkQmduNzZ2MUkwQTloQkZSQkd0aTRpaHhrMWpPc0FvOU1MWmdPUg==' \
                  --data-urlencode 'alg=RS256' \
                  --data-urlencode 'clientId=Mh9VKniW9rKVkBRZYoamGZ9k5hGCnrCq' | grep -o '"access_token":"[^"]*' | sed 's/"access_token":"//' | tr -d '"')
      #echo $JWT_TOKEN
      curl --location --request PUT "$APIGEE_MS_URL/${PIPELINE_TYPE}/update-status" --header 'Content-Type: application/json' --header "Authorization: Bearer ${JWT_TOKEN}"  --data "{\"trackingId\":\"${TRACKING_ID}\",\"commitId\":\"${CI_COMMIT_SHORT_SHA}\",\"scmOnboardStatus\":\"failed\",\"pipelineStatus\":\"not started\",\"pipelineFailedStage\":\"${FAILED_STAGE}\",\"pipelineId\":\"${CI_PIPELINE_ID}\",\"pipelineErrorDetails\":\"NA\", \"pipelineType\":\"${pipelineType}\",\"projectId\":\"${CI_PROJECT_ID}\",\"refBranch\":\"${CI_COMMIT_REF_NAME}\"}" -vvv

notify-failure:
  tags:
    - apimhub
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  stage: notify
  when: on_failure
  allow_failure: true
  script:
    - echo $CI_COMMIT_SHORT_SHA > commit_id
    - echo "TRACKING_ID = $TRACKING_ID"

    # Get JWT token
    - |
      JWT_TOKEN=$(curl --location --request POST "$APIGEE_JWT_TOKEN_URL" \
        --header 'Content-Type: application/x-www-form-urlencoded' \
        --header 'Authorization: Basic TWg5VktuaVc5cktWa0JSWllvYW1HWjlrNWhHQ25yQ3E6cE5WalBkQmduNzZ2MUkwQTloQkZSQkd0aTRpaHhrMWpPc0FvOU1MWmdPUg==' \
        --data-urlencode 'alg=RS256' \
        --data-urlencode 'clientId=Mh9VKniW9rKVkBRZYoamGZ9k5hGCnrCq' | grep -o '"access_token":"[^"]*' | sed 's/"access_token":"//' | tr -d '"')
      echo "JWT_TOKEN (truncated): ${JWT_TOKEN:0:10}..."

    # Get failed job info
    - curl --location --request GET "https://gitlab.onefiserv.net/api/v4/projects/$CI_PROJECT_ID/pipelines/$CI_PIPELINE_ID/jobs?scope[]=failed" --header "PRIVATE-TOKEN:5AVBaTe2YkKbyGsHf_UX" > data.json
    - |
      FAILED_STAGE=$(sed -n 's/.*"stage":"\([^"]*\)".*"web_url":"\([^"]*\)".*/ \1 /p' data.json)
      ERROR_DETAILS=$(sed -n 's/.*"stage":"\([^"]*\)".*"web_url":"\([^"]*\)".*/ \2 /p' data.json)

      if [[ -z "$ERROR_DETAILS" ]]; then
        ERROR_DETAILS="Invalid private_token or no failed jobs"
      else
        JOB_ID=$(echo $ERROR_DETAILS | awk -F'/' '{print $NF}')
        echo "JOB_ID: $JOB_ID"

        # Get failed job logs
        curl --location --request GET "https://gitlab.onefiserv.net/api/v4/projects/$CI_PROJECT_ID/jobs/$JOB_ID/trace" --header "PRIVATE-TOKEN:5AVBaTe2YkKbyGsHf_UX" -s -o logs.txt

        # Clean logs for MS payload
        sed 's/"//g' logs.txt > logs_no_quotes.txt
        sed "s,\x1B\[[0-9;]*[a-zA-Z],,g;s,\x0D\x0A,\x0A,g" logs_no_quotes.txt > logs_cleaned.txt
        sed 's/$/#########/' logs_cleaned.txt > final_logs.txt
        sed -e 's/\r/####/g' final_logs.txt > concatenated_logs.txt
        ERROR_DETAILS=$(cat concatenated_logs.txt | sed ':a;N;$!ba;s/\n/\\n/g')
      fi

    # Final MS call with logs
    - |
      curl --location --request PUT "https://apihub.onefiserv.net/v1/apim-audit-logging/${PIPELINE_TYPE}/update-status" \
        --header 'Content-Type: application/json' \
        --header "Authorization: Bearer ${JWT_TOKEN}" \
        --data-raw "{
            \"trackingId\": \"${TRACKING_ID}\",
            \"commitId\": \"$(cat commit_id)\",
            \"scmOnboardStatus\": \"failed\",
            \"pipelineStatus\": \"not started\",
            \"pipelineFailedStage\": \"${FAILED_STAGE}\",
            \"pipelineId\": \"${CI_PIPELINE_ID}\",
            \"pipelineErrorDetails\": \"${ERROR_DETAILS}\",
            \"pipelineType\": \"${PIPELINE_TYPE}\",
            \"projectId\": \"${CI_PROJECT_ID}\",
            \"refBranch\": \"${CI_COMMIT_REF_NAME}\"
          }"
  
  
