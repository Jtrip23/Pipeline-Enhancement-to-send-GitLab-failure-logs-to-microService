variables:
  MAVEN_CLI_OPTS: "-s /.m2/cicd-settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=/.m2/repository"
  SCANCENTRAL_BUILD_OPTS: "-bt mvn"
  DEFAULT_BRANCH: "feature-1"
  FAILED_STAGE: ""
  PIPELINE_TYPE: "proxy-gen"
  GATEWAY_PLATFORM: "apigee-saas"

include: 
  - ci/global.variable.yml
  - ci/proxynotification.yml
  - ci/git.config.yml

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/
      when: always
    - if: $CI_COMMIT_BRANCH == "develop" && ( $CI_PIPELINE_SOURCE == 'push' || $CI_PIPELINE_SOURCE == 'merge_request_event' ) 
      when: always
    - when: never

default :
  tags:
    - $APIGEE_RUNNER_TAG
    
  artifacts:
    paths:
      - edge/**
      - .m2/**
      - pom.xml
      - edge/pom.xml

  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .m2/repository/
      - edge/target/
      - edge/node_modules/
      - pom.xml
      - edge/pom.xml
      - target/

.parent_pom_template: &parent_pom_definition
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - |
       sed -i "s~https://nexus.onefiserv.net/repository/Maven_Central/~\${NEXUS_CI_URL}~g; s~nexus.onefiserv.net~\${NEXUS_CICD_SERVER_ROOT}~g; s~mvn-na-fts-apim-uaid10785-private-~\${NEXUS_CICD_REPO}~g" commons-parent-pom.xml
       echo MAVEN_CLI_OPTS = $MAVEN_CLI_OPTS
       echo project-version = $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
       mvn $MAVEN_CLI_OPTS clean install deploy -f commons-parent-pom.xml -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dproject-version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)


.lint_template: &lint_definition
  image : $APIGEE_FMK_NODE_IMAGE_NAME
  script: 
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - |
      cd edge
      node -v
      echo $PATH
      git clone $APIGEE_LINT_GIT_URL -b $APIGEE_LINT_BRANCH
      cd apim-apigeelint
      npm install
      ls -la
      cd ../
      apigeelint -x ./apim-apigeelint/ftsPlugin/ -s apiproxy -f table.js --profile apigee

.jshint_template: &jshint_definition
  image : $APIGEE_FMK_NODE_IMAGE_NAME
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - |
      if [ -d "edge/apiproxy/resources/jsc" ] 
      then
          ls -la 
          cd edge/apiproxy/resources/jsc 
          jshint *.js | tee policyReportJSHint.json
          mv policyReportJSHint.json ../../../
          cd ../../../test/unit
          jshint *.js | tee unitTestReportJSHint.json
          mv unitTestReportJSHint.json ../..
      else
        echo "Directory edge/apiproxy/resources/jsc does not exists."
      fi

.unit_test_template: &unit_test_definition
  image : $APIGEE_FMK_NODE_IMAGE_NAME
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - |
      if [ -d "edge/test/unit" ] 
      then
        cd edge/test/unit
        mocha *.js
        istanbul --include-all-sources cover _mocha -- -R dot --recursive *.js > code-coverage.json
        mv code-coverage.json $CI_PROJECT_DIR/edge
      else
        echo "Directory edge/test/unit does not exists."
      fi

.nexus_sonatype_template: &nexus_sonatype_definition
  image: $SONATYPE_NEXUS_IQ
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - |
      if [ -d "/sonatype/evaluate" ] 
      then
        /sonatype/evaluate -i $SONATYPE_APP_ID -s $NEXUS_IQ_URL -a $NEXUS_IQ_USERNAME:$NEXUS_IQ_PASSWORD  edge/target/*
      else
        echo "Directory /sonatype/evaluate does not exists."
      fi

.package_template: &package_definition
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - sed -i "s~https://nexus.onefiserv.net/repository/Maven_Central/~\${NEXUS_CI_URL}~g; s~nexus.onefiserv.net~\${NEXUS_CICD_SERVER_ROOT}~g; s~mvn-na-fts-apim-uaid10785-private-~\${NEXUS_CICD_REPO}~g" commons-parent-pom.xml
    - cd edge
    - |
      mvn $MAVEN_CLI_OPTS clean package -Papigee -Dapigee.env=$APIGEE_CI_ENV \
      -Dapigee.org=$APIGEE_CI_ORG \
      -DvhostProtocol=https \
      -DvhostDomainName=$APIGEE_CI_ENV.api.firstdata.com \
      -DvhostDomainPort=443 -DvhostEdgeName=api-firstdata \
      -Dapigee.config.dir=target/resources/edge -Dapigee.config.options=update \
      -Dapigee.config.exportDir=target/test/integration \
      -Dapigee.options=override -Dapigee.override.delay=2 \
      -Dapigee.api.port=443 -Dapigee.api.host=api.enterprise.apigee.com -Dapigee.api.protocol=https \
      -Dusername=$apigee_username -Dpassword=$apigee_password

.code_scan_template: &code_scan_definition
  image: $APIHUB_FORTIFY
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - pwd && ls -ltr
    - |
      echo "Using BU_APM_NUMBER=$BU_APM_NUMBER"
      if [ -z "$FORTIFY_APP_VERSION" ]
      then
        FORTIFY_APP_VERSION="2025.1-$CI_PROJECT_NAME"
      fi
      echo "SSC_URL: $APIHUB_SSC_URL"
      echo "FORTIFY_APP_VERSION=$FORTIFY_APP_VERSION" 
      scancentral -sscurl $APIHUB_SSC_URL -ssctoken $APIHUB_SSC_TOKEN start -upload -application $BU_APM_NUMBER -version $FORTIFY_APP_VERSION -uptoken $APIHUB_SSC_TOKEN -email $FORTIFY_NOTIFICATION_DL -bt none

.deploy_proxy_template: &deploy_proxy_definition
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - sed -i "s~https://nexus.onefiserv.net/repository/Maven_Central/~\${NEXUS_CI_URL}~g; s~nexus.onefiserv.net~\${NEXUS_CICD_SERVER_ROOT}~g; s~mvn-na-fts-apim-uaid10785-private-~\${NEXUS_CICD_REPO}~g" commons-parent-pom.xml
    - cd edge
    - |
      curl --location "$tokenurl" --header "Authorization: Basic ZWRnZWNsaTplZGdlY2xpc2VjcmV0" --header "Content-Type: application/x-www-form-urlencoded" --data-urlencode "grant_type=password" --data-urlencode "username=$apigee_username" --data-urlencode "password=$apigee_password" --proxy "$APIGEE_PROXY_URL" -s -w "curl_response_code: %{http_code}\n" -o token.json
      bearer=$(cat "token.json" | grep -o '"access_token":"[^"]*' | cut -d':' -f2 | tr -d '"')
      refresh=$(cat "token.json" | grep -o '"refresh_token":"[^"]*' | cut -d':' -f2 | tr -d '"')
    - |
      mvn $MAVEN_CLI_OPTS clean package -Papigee -Dapigee.env=$APIGEE_CI_ENV \
      -Dapigee.org=$APIGEE_CI_ORG \
      -DvhostProtocol=https \
      -DvhostDomainName=$APIGEE_CI_ENV.api.firstdata.com \
      -DvhostDomainPort=443 -DvhostEdgeName=api-firstdata \
      -Dapigee.config.dir=target/resources/edge -Dapigee.config.options=none \
      -Dapigee.config.exportDir=target/test/integration \
      -Dapigee.options=override -Dapigee.override.delay=2 \
      -Dapigee.api.port=443 -Dapigee.api.host=api.enterprise.apigee.com -Dapigee.api.protocol=https \
      -Dusername=$apigee_username -Dpassword=$apigee_password
    - |
      mvn $MAVEN_CLI_OPTS apigee-enterprise:deploy -Papigee \
      -Dhttps.proxyHost=lvz-outboundproxy.onefiserv.net -Dhttps.proxyPort=8080 \
      -Dapigee.env=$APIGEE_CI_ENV -Dapigee.org=$APIGEE_CI_ORG \
      -Dapigee.options=override -Dapigee.override.delay=2 \
      -DvhostProtocol=https -DvhostDomainName=$APIGEE_CI_ENV.api.firstdata.com -DvhostDomainPort=443 \
      -DvhostEdgeName=api-firstdata \
      -Dapigee.config.dir=target/resources/edge -Dapigee.config.options=update \
      -Dapigee.config.exportDir=target/test/integration \
      -Dusername=$apigee_username -Dpassword=$apigee_password \
      -Dapigee.api.port=443 -Dapigee.api.host=api.enterprise.apigee.com -Dapigee.api.protocol=https \
      -Dtokenurl=$tokenurl -Dauthtype=$authtype -Dapigee.bearer=$bearer -Dapigee.refresh=$refresh


.post_deploy_proxy_template: &post_deploy_proxy_definition
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - sed -i "s~https://nexus.onefiserv.net/repository/Maven_Central/~\${NEXUS_CI_URL}~g; s~nexus.onefiserv.net~\${NEXUS_CICD_SERVER_ROOT}~g; s~mvn-na-fts-apim-uaid10785-private-~\${NEXUS_CICD_REPO}~g" commons-parent-pom.xml
    - cd edge
    - |
      curl --location "$tokenurl" --header "Authorization: Basic ZWRnZWNsaTplZGdlY2xpc2VjcmV0" --header "Content-Type: application/x-www-form-urlencoded" --data-urlencode "grant_type=password" --data-urlencode "username=$apigee_username" --data-urlencode "password=$apigee_password" --proxy "$APIGEE_PROXY_URL" -s -w "curl_response_code: %{http_code}\n" -o token.json
      bearer=$(cat "token.json" | grep -o '"access_token":"[^"]*' | cut -d':' -f2 | tr -d '"')
      refresh=$(cat "token.json" | grep -o '"refresh_token":"[^"]*' | cut -d':' -f2 | tr -d '"')
      #echo $bearer
      #echo $refresh
    - |
      mvn $MAVEN_CLI_OPTS -Papigee -Dapigee.env=$APIGEE_CI_ENV -Dapigee.org=$APIGEE_CI_ORG \
      -DvhostProtocol=https \
      -DvhostDomainName=$APIGEE_CI_ENV.api.firstdata.com \
      -DvhostDomainPort=443 -DvhostEdgeName=api-firstdata \
      -Dapigee.config.dir=target/resources/edge \
      -Dapigee.config.options=none \
      -Dapigee.config.exportDir=target/test/integration \
      -Dapigee.options=override -Dapigee.override.delay=2 \
      -Dusername=$apigee_username -Dpassword=$apigee_password \
      -Dapigee.api.port=443 \
      -Dapigee.api.host=api.enterprise.apigee.com \
      -Dapigee.api.protocol=https \
      -Dtokenurl=$tokenurl \
      -Dauthtype=$authtype \
      -Dbearer=$bearer \
      -Drefresh=$refresh \
      apigee-config:developers
    - |
      mvn $MAVEN_CLI_OPTS -Papigee -Dapigee.env=$APIGEE_CI_ENV -Dapigee.org=$APIGEE_CI_ORG \
      -Dhttps.proxyHost=lvz-outboundproxy.onefiserv.net -Dhttps.proxyPort=8080 \
      -DvhostProtocol=https \
      -DvhostDomainName=$APIGEE_CI_ENV.api.firstdata.com \
      -DvhostDomainPort=443 -DvhostEdgeName=api-firstdata \
      -Dapigee.config.dir=target/resources/edge \
      -Dapigee.config.options=update \
      -Dapigee.config.exportDir=target/test/integration \
      -Dapigee.options=override -Dapigee.override.delay=2 \
      -Dusername=$apigee_username -Dpassword=$apigee_password \
      -Dapigee.api.port=443 \
      -Dapigee.api.host=api.enterprise.apigee.com \
      -Dapigee.api.protocol=https \
      -Dtokenurl=$tokenurl \
      -Dauthtype=$authtype \
      -Dbearer=$bearer \
      -Drefresh=$refresh \
      apigee-config:developers
    - sleep 20
    - echo $CI_PROJECT_DIR
    - |
      mvn $MAVEN_CLI_OPTS -Papigee -Dapigee.env=$APIGEE_CI_ENV -Dapigee.org=$APIGEE_CI_ORG \
      -Dhttps.proxyHost=lvz-outboundproxy.onefiserv.net -Dhttps.proxyPort=8080 \
      -DvhostProtocol=https \
      -DvhostDomainName=$APIGEE_CI_ENV.api.firstdata.com \
      -DvhostDomainPort=443 -DvhostEdgeName=api-firstdata \
      -Dapigee.config.dir=target/resources/edge \
      -Dapigee.config.options=update \
      -Dapigee.config.exportDir=target/test/integration \
      -Dapigee.options=override -Dapigee.override.delay=2 \
      -Dusername=$apigee_username -Dpassword=$apigee_password \
      -Dapigee.api.port=443 \
      -Dapigee.api.host=api.enterprise.apigee.com \
      -Dapigee.api.protocol=https \
      -Dtokenurl=$tokenurl \
      -Dauthtype=$authtype \
      -Dbearer=$bearer \
      -Drefresh=$refresh \
      apigee-config:apiproducts
    - sleep 20
    - echo $CI_PROJECT_DIR
    - |
      mvn $MAVEN_CLI_OPTS -Papigee -Dapigee.env=$APIGEE_CI_ENV -Dapigee.org=$APIGEE_CI_ORG \
      -Dhttps.proxyHost=lvz-outboundproxy.onefiserv.net -Dhttps.proxyPort=8080 \
      -DvhostProtocol=https \
      -DvhostDomainName=$APIGEE_CI_ENV.api.firstdata.com \
      -DvhostDomainPort=443 -DvhostEdgeName=api-firstdata \
      -Dapigee.config.dir=target/resources/edge \
      -Dapigee.config.options=update \
      -Dapigee.config.exportDir=target/test/integration \
      -Dapigee.options=override -Dapigee.override.delay=2 \
      -Dusername=$apigee_username -Dpassword=$apigee_password \
      -Dapigee.api.port=443 \
      -Dapigee.api.host=api.enterprise.apigee.com \
      -Dapigee.api.protocol=https \
      -Dtokenurl=$tokenurl \
      -Dauthtype=$authtype \
      -Dbearer=$bearer \
      -Drefresh=$refresh \
      apigee-config:apps
    - |
      mvn $MAVEN_CLI_OPTS -Papigee -Dapigee.env=$APIGEE_CI_ENV -Dapigee.org=$APIGEE_CI_ORG \
      -Dhttps.proxyHost=lvz-outboundproxy.onefiserv.net -Dhttps.proxyPort=8080 \
      -DvhostProtocol=https \
      -DvhostDomainName=$APIGEE_CI_ENV.api.firstdata.com \
      -DvhostDomainPort=443 -DvhostEdgeName=api-firstdata \
      -Dapigee.config.dir=target/resources/edge \
      -Dapigee.config.options=update \
      -Dapigee.config.exportDir=target/test/integration \
      -Dapigee.options=override -Dapigee.override.delay=2 \
      -Dusername=$apigee_username -Dpassword=$apigee_password \
      -Dapigee.api.port=443 \
      -Dapigee.api.host=api.enterprise.apigee.com \
      -Dapigee.api.protocol=https \
      -Dtokenurl=$tokenurl \
      -Dauthtype=$authtype \
      -Dbearer=$bearer \
      -Drefresh=$refresh \
      apigee-config:exportAppKeys
    - |
      mvn $MAVEN_CLI_OPTS -Papigee -Dapigee.env=$APIGEE_CI_ENV -Dapigee.org=$APIGEE_CI_ORG \
      -Dhttps.proxyHost=lvz-outboundproxy.onefiserv.net -Dhttps.proxyPort=8080 \
      -DvhostProtocol=https \
      -DvhostDomainName=$APIGEE_CI_ENV.api.firstdata.com \
      -DvhostDomainPort=443 -DvhostEdgeName=api-firstdata \
      -Dapigee.config.dir=target/resources/edge \
      -Dapigee.config.options=update \
      -Dapigee.config.exportDir=target/test/integration \
      -Dapigee.options=override -Dapigee.override.delay=2 \
      -Dusername=$apigee_username -Dpassword=$apigee_password \
      -Dapigee.api.port=443 \
      -Dapigee.api.host=api.enterprise.apigee.com \
      -Dapigee.api.protocol=https \
      -Dtokenurl=$tokenurl \
      -Dauthtype=$authtype \
      -Dbearer=$bearer \
      -Drefresh=$refresh \
      apigee-config:keyvaluemaps

.upload_artifact_proxy_template: &upload_artifact_proxy_template
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - |
      sed -i "s~https://nexus.onefiserv.net/repository/Maven_Central/~\${NEXUS_CI_URL}~g; s~nexus.onefiserv.net~\${NEXUS_CICD_SERVER_ROOT}~g; s~mvn-na-fts-apim-uaid10785-private-~\${NEXUS_CICD_REPO}~g" commons-parent-pom.xml
      if [ ${APIGEE_ENV} == "test" ]; then 
          currentversion=$(grep -oP '<version>\K[^<]+' pom.xml | head -n 1 | cut -d'-' -f1)
          IFS='.' read -ra versioncomponents <<< "$currentversion"
          majorversion=${versioncomponents[0]}
          minorversion=${versioncomponents[1]}
          incrementalversion=${versioncomponents[2]}
          for APIGEE_CI_ENV in int test cat  
          do 
            echo env = $APIGEE_ENV
            echo $APIGEE_CI_ENV
            echo commit = $CI_COMMIT_SHORT_SHA
            
            if [[ ${APIGEE_CI_ENV} == "int" ]]; then
              echo "int" 
              currentversion=$(grep -oP '<version>\K[^<]+' pom.xml | head -n 1 | cut -d'-' -f1)
              newversion="${majorversion}.${minorversion}.${incrementalversion}-${CI_COMMIT_SHORT_SHA}-${APIGEE_CI_ENV}-SNAPSHOT"
            elif [[ ${APIGEE_CI_ENV} == "test" ]]; then
              echo "test"
              currentversion=${majorversion}.${minorversion}.${incrementalversion}-${CI_COMMIT_SHORT_SHA}-int
              newversion="${majorversion}.${minorversion}.${incrementalversion}-${CI_COMMIT_SHORT_SHA}-${APIGEE_CI_ENV}-SNAPSHOT"
            elif [[ ${APIGEE_CI_ENV} == "cat" ]]; then
              echo "cat"
              currentversion=${majorversion}.${minorversion}.${incrementalversion}-${CI_COMMIT_SHORT_SHA}-test
              newversion="${majorversion}.${minorversion}.${incrementalversion}-${CI_COMMIT_SHORT_SHA}-${APIGEE_CI_ENV}-SNAPSHOT"
            else 
              echo "elsepart"
              currentversion=$(grep -oP '<version>\K[^<]+' pom.xml | head -n 1 | cut -d'-' -f1)
            fi 
            
            sed -i "s/<version>${currentversion}-SNAPSHOT<\/version>/<version>${newversion}<\/version>/" pom.xml
            echo "Updated pom version to: ${newversion}"
            
            sed -i "s/<version>${currentversion}-SNAPSHOT<\/version>/<version>${newversion}<\/version>/" edge/pom.xml
            echo "Updated child pom version to: ${newversion}"
            
            mvn $MAVEN_CLI_OPTS deploy -Dmaven.test.skip=true -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true
            echo "installing the package in local repository" 
          done 
      else
          echo env = "qa"
          APIGEE_CI_ENV_CATEGORY="qa"
          echo commit = $CI_COMMIT_SHORT_SHA
          echo $APIGEE_CI_ENV_CATEGORY
          currentversion=$(grep -oP '<version>\K[^<]+' pom.xml | head -n 1 | cut -d'-' -f1)
          IFS='.' read -ra versioncomponents <<< "$currentversion"
          majorversion=${versioncomponents[0]}
          minorversion=${versioncomponents[1]}
          incrementalversion=${versioncomponents[2]}
          newversion="${majorversion}.${minorversion}.${incrementalversion}-${CI_COMMIT_SHORT_SHA}-${APIGEE_CI_ENV_CATEGORY}-SNAPSHOT"

          sed -i "s/<version>${currentversion}-SNAPSHOT<\/version>/<version>${newversion}<\/version>/" pom.xml
          echo "Updated pom version to: ${newversion}"

          sed -i "s/<version>${currentversion}-SNAPSHOT<\/version>/<version>${newversion}<\/version>/" edge/pom.xml
          echo "Updated child pom version to: ${newversion}"
          mvn $MAVEN_CLI_OPTS deploy -Dmaven.test.skip=true -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true
          echo "installing the package in local repository"
      fi 
    - echo "installing the package in local repository"

stages:
  - git-config
  - init
  - apigeelint
  - jshint
  - unit-test
  - package
  - sonatype
  - fortify-scan
  - deploy-proxy
  - deploy-org-config
  - functional-test
  - upload-nexus
  - notify

build:setup :
  <<: *parent_pom_definition
  stage: init
  needs:
    - build:populate-variables
  artifacts:
    reports:
      dotenv: build.env
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" 
      variables:
        APIGEE_ENV: "test"
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/ 
      variables:
        APIGEE_ENV: "qa"
      when: on_success

build:lint :
  <<: *lint_definition
  stage: apigeelint
  allow_failure: false
  needs:
    - build:populate-variables
    - build:setup
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - "edge/lint-results-apigeeLint.json"
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" 
      variables:
        APIGEE_ENV: "test"
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/ 
      variables:
        APIGEE_ENV: "qa"
      when: on_success

build:jshint :
  <<: *jshint_definition
  stage: jshint
  allow_failure: true
  needs:
    - build:populate-variables
    - build:lint
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - "edge/policyReportJSHint.json"
      - "edge/unitTestReportJSHint.json"
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" 
      variables:
        APIGEE_ENV: "test"
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/ 
      variables:
        APIGEE_ENV: "qa"
      when: on_success

build:unit-test :
  <<: *unit_test_definition
  stage: unit-test
  allow_failure: true
  needs:
    - build:populate-variables
    - build:jshint
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - "edge/code-coverage.json"
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" 
      variables:
        APIGEE_ENV: "test"
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/ 
      variables:
        APIGEE_ENV: "qa"
      when: on_success

build:package :
  <<: *package_definition
  stage: package
  needs:
    - build:populate-variables
    - build:unit-test
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - edge/target
    expire_in: 1 day
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" 
      variables:
        APIGEE_ENV: "test"
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/ 
      variables:
        APIGEE_ENV: "qa"
      when: on_success

build:sonatype :
  <<: *nexus_sonatype_definition
  stage: sonatype
  allow_failure: true
  needs:
    - build:populate-variables
    - build:package
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - /sonatype/reports/UAID-10785-policy-eval-report.html

build:fortify-scan :
  <<: *code_scan_definition
  stage: fortify-scan
  needs:
    - build:populate-variables
    - build:notification
    - build:sonatype
  artifacts:
    reports:
      dotenv: build.env
  allow_failure: true

build:deploy :
  <<: *deploy_proxy_definition
  stage: deploy-proxy
  needs:
    - build:populate-variables
    - build:fortify-scan
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - edge/target
    expire_in: 1 day
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/ 
      variables:
        APIGEE_ENV: "qa"
      when: on_success

build:post-deploy :
  <<: *post_deploy_proxy_definition
  stage: deploy-org-config
  needs:
    - build:populate-variables
    - build:deploy
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - edge/target
    expire_in: 1 day
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/ 
      variables:
        APIGEE_ENV: "qa"
      when: on_success

build:post-deploy-test :
  image: $APIGEE_FMK_NODE_IMAGE_NAME
  allow_failure: true
  script:
    - cd edge
    - node test/integration/postman/index.js
  stage: functional-test
  needs:
    - build:populate-variables
    - build:post-deploy
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - edge/target
    expire_in: 1 day
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/ 
      variables:
        APIGEE_ENV: "qa"
      when: on_success

build:upload-artifact :
  <<: *upload_artifact_proxy_template
  stage: upload-nexus
  needs:
    - job: build:populate-variables
    - job: build:post-deploy-test
      optional: true
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - edge/target/*.jar
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" 
      variables:
        APIGEE_ENV: "test"
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/ 
      variables:
        APIGEE_ENV: "qa"
      when: on_success

